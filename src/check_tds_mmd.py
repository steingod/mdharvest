#!/usr/bin/env python3

import sys
import os
import argparse
import textwrap
from mdh_modules.mdh_utils import initialise_logger
from mdh_modules.traverse_thredds_utils import check_mmd_tree

if __name__ == '__main__':
    # Parse command line arguments
    parser = argparse.ArgumentParser(
            description=textwrap.dedent('''\
                    Check MMD files generated by traverse_thredds.
                    MMD files are checked for presence of parent/ 
                    child relations and ensures that all children have a reference to the parent.
                    If parents are not identified these are added.
                    Parents are identified by filenames containing 
                    strings of the type '*_parent*', '*_main*' or
                    '*_aggregated*'.
            '''))
    parser.add_argument('dir', type=str, 
            help='Directory where MMD files are')
    parser.add_argument("-d","--dry-run",action="store_true", help="Do not edit files, just report when edit is needed")
    parser.add_argument("-l","--logfile",dest="logfile", help="Log file", required=True)
    
    try:
        args = parser.parse_args()
    except:
        parser.print_help()
        sys.exit()
    
    # Set up logging
    mylog = initialise_logger(args.logfile,os.path.basename(__file__))
    mylog.info('\n==========\nConfiguration of logging is finished.')

    try:
        check_mmd_tree(args.dir, mylog, args.dry_run)
    except Exception as e:
        mylog.error('Something went wrong:', e)
        sys.exit()
    sys.exit()
